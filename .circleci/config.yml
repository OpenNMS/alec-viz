version: 2

defaults: &defaults

  working_directory: /home/circleci/alec-viz

  workspace_root: &workspace_root
    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

references:
  container_config: &container_config
    docker:
      - image: docker:18.06.0-ce-git

  dockerhub_login: &dockerhub_login
    run:
      name: DockerHub Login
      command: |
        docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

jobs:

  build_backend:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk-stretch-node-browsers 

    steps:
      - checkout

      - *attach_workspace

      - restore_cache:
          keys:
          - backend-v1-dependencies-{{ checksum "backend/pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - backend-v1-dependencies-

      - run: |
          cd backend
          mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: backend-v1-dependencies-{{ checksum "backend/pom.xml" }}
        
      - run: |
          cd backend
          mvn package

      - run: |
          mkdir -p /tmp/workspace/backend/
          cp backend/target/server-*.jar /tmp/workspace/backend/server.jar
 
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - backend

  build_frontend:
    <<: *defaults
    docker:
      - image: circleci/node:11

    steps:
      - checkout

      - *attach_workspace

      - restore_cache:
          keys:
          - frontend-v1-dependencies-{{ checksum "frontend/package.json" }}
          # fallback to using the latest cache if no exact match is found
          - frontend-v1-dependencies-

      - run: |
          cd frontend
          npm install

      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules  # location depends on npm version
            - ~/alec-viz/frontend/node_modules
          key: frontend-v1-dependencies-{{ checksum "frontend/package.json" }}

      - run: |
          cd frontend
          npm run-script build-for-docker

      - run: |
          mkdir -p /tmp/workspace/frontend/
          cp -R frontend/dist /tmp/workspace/frontend/

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - frontend

  build_docker_image:
    <<: *defaults
    <<: *container_config

    steps:
      - setup_remote_docker
      - *attach_workspace
      - checkout
      - run:
          name: Build Docker Image
          no_output_timeout: 20m
          command: |
            cp -R /tmp/workspace workspace
            cd workspace
            docker build -t alec-viz -f ../Dockerfile .
      - run:
          name: Save Docker Container Image as artifact in workspace
          command: |
            docker image save alec-viz -o /tmp/workspace/alec-viz-docker-image
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - alec-viz-docker-image

  publish_dockerhub:
    <<: *defaults
    <<: *container_config

    steps:
      - setup_remote_docker
      - *attach_workspace
      - *dockerhub_login
      - run:
          name: Load Docker Container Image file
          command: |
            docker image load -i /tmp/workspace/alec-viz-docker-image
      - run:
          name: Tag Docker Container Images and push to DockerHub
          command: |
            docker tag alec-viz opennms/alec-viz:latest
            docker push opennms/alec-viz:latest

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_backend
      - build_frontend
      - build_docker_image:
          requires:
            - build_backend
            - build_frontend
      - publish_dockerhub:
          filters:
            branches:
              only:
                - /release\/.*/
                - master
          requires:
            - build_docker_image

